{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///Users/jayantjagtap/Work/RoClubAssignment/store/single_slot_booking_store/context/SingleSlotBookingProvider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SingleSlotBookingContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call SingleSlotBookingContext() from the server but SingleSlotBookingContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/store/single_slot_booking_store/context/SingleSlotBookingProvider.tsx <module evaluation>\",\n    \"SingleSlotBookingContext\",\n);\nexport const SingleSlotBookingProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SingleSlotBookingProvider() from the server but SingleSlotBookingProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/store/single_slot_booking_store/context/SingleSlotBookingProvider.tsx <module evaluation>\",\n    \"SingleSlotBookingProvider\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,2BAA2B,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EAC1D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,uGACA;AAEG,MAAM,4BAA4B,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EAC3D;IAAa,MAAM,IAAI,MAAM;AAAkQ,GAC/R,uGACA","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///Users/jayantjagtap/Work/RoClubAssignment/store/single_slot_booking_store/context/SingleSlotBookingProvider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SingleSlotBookingContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call SingleSlotBookingContext() from the server but SingleSlotBookingContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/store/single_slot_booking_store/context/SingleSlotBookingProvider.tsx\",\n    \"SingleSlotBookingContext\",\n);\nexport const SingleSlotBookingProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SingleSlotBookingProvider() from the server but SingleSlotBookingProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/store/single_slot_booking_store/context/SingleSlotBookingProvider.tsx\",\n    \"SingleSlotBookingProvider\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,2BAA2B,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EAC1D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,mFACA;AAEG,MAAM,4BAA4B,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EAC3D;IAAa,MAAM,IAAI,MAAM;AAAkQ,GAC/R,mFACA","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///Users/jayantjagtap/Work/RoClubAssignment/app/%28protected_routes%29/single-slot-booking/page.tsx"],"sourcesContent":["import { SingleSlotBookingProvider } from \"@/store/single_slot_booking_store/context/SingleSlotBookingProvider\";\nimport React, { FC } from \"react\";\n\nconst SingleSlotBooking: FC<{ children: React.ReactNode }> = ({ children }) => {\n  return <SingleSlotBookingProvider>{children}</SingleSlotBookingProvider>;\n};\n\nexport default SingleSlotBooking;\n"],"names":[],"mappings":";;;;AAAA;;;AAGA,MAAM,oBAAuD,CAAC,EAAE,QAAQ,EAAE;IACxE,qBAAO,6WAAC,2KAAA,CAAA,4BAAyB;kBAAE;;;;;;AACrC;uCAEe","debugId":null}}]
}